stations = ("Dr. Santos", "Ninoy Aquino Avenue", "PITX", "MIA Road", "Redemptorist-Aseana", "Baclaran", "EDSA", "Libertad", "Gil Puyat", "Vito Cruz", "Quirino", "Pedro Gil", "UN Avenue", "Central", "Carriedo", "D. Jose", "Bambang", "Tayuman", "Blumentritt", "Abad Santos", "R. Papa", "Tth Avenue", "Monumento", "Balintawak", "Fernando Poe Jr.")

single_journey = [
    [0, 20, 20, 25, 25, 30, 30, 30, 30, 35, 35, 35, 35, 40, 40, 40, 40, 40, 45, 45, 45, 45, 50, 50, 55],
    [20, 0, 20, 20, 25, 25, 30, 30, 30, 30, 30, 35, 35, 35, 35, 35, 40, 40, 40, 40, 45, 45, 45, 50, 50],
    [20, 20, 0, 20, 20, 25, 25, 25, 25, 30, 30, 30, 30, 30, 35, 35, 35, 35, 35, 40, 40, 40, 40, 45, 50],
    [25, 20, 20, 0, 20, 20, 25, 25, 25, 25, 30, 30, 30, 30, 30, 35, 35, 35, 35, 35, 40, 40, 40, 45, 50],
    [25, 25, 20, 20, 0, 20, 20, 20, 25, 25, 25, 25, 30, 30, 30, 30, 30, 30, 35, 35, 35, 35, 40, 45, 45],
    [30, 25, 25, 20, 20, 0, 20, 20, 20, 20, 25, 25, 25, 25, 30, 30, 30, 30, 30, 35, 35, 35, 40, 40, 45],
    [30, 30, 25, 25, 20, 20, 0, 20, 20, 20, 20, 25, 25, 25, 25, 30, 30, 30, 30, 30, 35, 35, 35, 40, 45],
    [30, 30, 25, 25, 20, 20, 20, 0, 20, 20, 20, 20, 25, 25, 25, 25, 30, 30, 30, 30, 35, 35, 35, 40, 40],
    [30, 30, 25, 25, 25, 20, 20, 20, 0, 20, 20, 20, 20, 25, 25, 25, 25, 30, 30, 30, 30, 35, 35, 40, 40],
    [35, 30, 30, 25, 25, 20, 20, 20, 20, 0, 20, 20, 20, 20, 25, 25, 25, 25, 25, 30, 30, 30, 35, 35, 40],
    [35, 30, 30, 30, 25, 25, 20, 20, 20, 20, 0, 20, 20, 20, 20, 25, 25, 25, 25, 25, 30, 30, 30, 35, 35],
    [35, 35, 30, 30, 25, 25, 25, 20, 20, 20, 20, 0, 20, 20, 20, 20, 20, 25, 25, 25, 25, 30, 30, 35, 35],
    [35, 35, 30, 30, 30, 25, 25, 25, 20, 20, 20, 20, 0, 20, 20, 20, 20, 20, 25, 25, 25, 25, 30, 30, 35],
    [40, 35, 30, 30, 30, 25, 25, 25, 25, 20, 20, 20, 20, 0, 20, 20, 20, 20, 20, 25, 25, 25, 30, 30, 35],
    [40, 35, 35, 30, 30, 30, 25, 25, 25, 25, 20, 20, 20, 20, 0, 20, 20, 20, 20, 20, 25, 25, 25, 30, 30],
    [40, 35, 35, 35, 30, 30, 30, 25, 25, 25, 25, 20, 20, 20, 20, 0, 20, 20, 20, 20, 20, 25, 25, 30, 30],
    [40, 40, 35, 35, 30, 30, 30, 30, 25, 25, 25, 20, 20, 20, 20, 20, 0, 20, 20, 20, 20, 20, 25, 25, 30],
    [40, 40, 35, 35, 30, 30, 30, 30, 30, 25, 25, 25, 20, 20, 20, 20, 20, 0, 20, 20, 20, 20, 20, 25, 30],
    [45, 40, 35, 35, 35, 30, 30, 30, 30, 25, 25, 25, 25, 20, 20, 20, 20, 20, 0, 20, 20, 20, 20, 25, 30],
    [45, 40, 40, 35, 35, 30, 30, 30, 30, 30, 25, 25, 25, 25, 20, 20, 20, 20, 20, 0, 20, 20, 20, 25, 25],
    [45, 45, 40, 40, 35, 35, 35, 35, 30, 30, 30, 25, 25, 25, 20, 20, 20, 20, 20, 20, 0, 20, 20, 25, 25],
    [45, 45, 40, 40, 35, 35, 35, 35, 35, 30, 30, 30, 25, 25, 25, 25, 20, 20, 20, 20, 20, 0, 20, 25, 25],
    [50, 45, 40, 40, 40, 35, 35, 35, 35, 30, 30, 30, 30, 25, 25, 25, 25, 20, 20, 20, 20, 20, 0, 20, 25],
    [50, 50, 45, 45, 45, 40, 40, 40, 40, 35, 35, 35, 30, 30, 30, 30, 25, 25, 25, 25, 25, 25, 20, 0, 20],
    [55, 50, 50, 50, 45, 45, 45, 40, 40, 40, 35, 35, 35, 35, 30, 30, 30, 30, 30, 25, 25, 25, 25, 20, 0]
]

stored_value = [
    [0, 19, 20, 22, 23, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 49, 52],
    [19, 0, 18, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 35, 36, 36, 37, 38, 40, 41, 42, 44, 47, 50],
    [20, 18, 0, 18, 19, 22, 22, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 45, 48],
    [22, 20, 18, 0, 17, 20, 20, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 43, 46],
    [23, 21, 19, 17, 0, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 42, 45],
    [26, 23, 22, 20, 18, 0, 17, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 30, 31, 33, 34, 35, 37, 40, 43],
    [27, 24, 22, 20, 19, 17, 0, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 42],
    [28, 26, 24, 22, 21, 19, 18, 0, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 38, 40],
    [29, 27, 25, 23, 22, 20, 19, 17, 0, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 37, 39],
    [31, 28, 27, 25, 23, 21, 20, 19, 18, 0, 17, 19, 20, 22, 23, 24, 25, 25, 26, 28, 29, 30, 32, 35, 38],
    [32, 29, 28, 26, 25, 22, 21, 20, 19, 17, 0, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 34, 37],
    [33, 31, 29, 27, 26, 24, 23, 21, 20, 19, 17, 0, 17, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 33, 35],
    [34, 32, 30, 28, 27, 25, 24, 22, 21, 20, 19, 17, 0, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 32, 34],
    [36, 33, 32, 30, 29, 27, 26, 24, 23, 22, 20, 19, 18, 0, 17, 18, 19, 20, 21, 23, 23, 25, 27, 30, 33],
    [37, 35, 33, 31, 30, 28, 27, 25, 24, 23, 22, 20, 19, 17, 0, 17, 17, 18, 19, 20, 21, 22, 24, 29, 31],
    [38, 36, 34, 32, 31, 29, 28, 26, 25, 24, 23, 21, 20, 18, 17, 0, 17, 17, 18, 19, 20, 21, 23, 28, 30],
    [39, 36, 35, 33, 32, 30, 29, 27, 26, 25, 24, 22, 21, 19, 17, 17, 0, 17, 18, 19, 20, 22, 23, 27, 30],
    [40, 37, 36, 34, 33, 30, 30, 28, 27, 25, 25, 23, 22, 20, 18, 18, 17, 0, 17, 18, 19, 20, 21, 25, 29],
    [41, 38, 37, 35, 34, 31, 31, 29, 28, 26, 26, 24, 23, 21, 19, 19, 18, 17, 0, 17, 18, 19, 20, 22, 26],
    [42, 40, 38, 36, 35, 33, 32, 30, 29, 28, 27, 25, 24, 23, 20, 20, 19, 18, 17, 0, 17, 19, 20, 24, 26],
    [43, 41, 39, 37, 36, 33, 33, 31, 30, 29, 28, 26, 25, 23, 21, 21, 20, 19, 18, 17, 0, 18, 19, 23, 25],
    [45, 42, 40, 38, 37, 34, 34, 32, 32, 30, 29, 27, 26, 25, 22, 22, 20, 20, 19, 18, 18, 0, 18, 21, 24],
    [46, 44, 42, 40, 39, 37, 36, 34, 33, 32, 31, 29, 28, 27, 24, 24, 23, 22, 20, 20, 19, 18, 0, 20, 22],
    [49, 47, 45, 43, 42, 40, 39, 38, 37, 35, 34, 33, 32, 30, 29, 28, 27, 25, 24, 23, 23, 21, 20, 0, 19],
    [52, 50, 48, 46, 45, 43, 42, 40, 39, 38, 37, 35, 34, 33, 31, 30, 30, 29, 28, 26, 25, 24, 22, 19, 0]
]

def applydiscount(n):
    return n * 0.50

# DISPLAYS STATIONS
print("===== LRT-1 Stations =====")
for i, station in enumerate(stations, 1):
    print(f"{i}. {station}")

# CARD SELECTION
print(f"\n===== SELECT CARD =====")
print("1. Single Journey Fare Matrix")
print("2. Stored Value Fare Matrix")

ticket = 0
while ticket < 1 or ticket > 2:
    selection1 = int(input("Select Card: "))

    # SINGLE JOURNEY FARE MATRIX
    if selection1 == 1:
        fromDes = 0
        toDes = 0

         # STATION SELECTION
        print(f"\n===== SELECT STATION =====")
        while fromDes < 1 or fromDes > 25:
            fromDes = int(input("From (Station 1-25): "))
        while toDes < 1 or toDes > 25:
            toDes = int(input("To (Station 1-25): "))

        baseprice = single_journey[fromDes - 1][toDes - 1]

        # DISCOUNT SELECTION
        print(f"\n===== SELECT STATUS =====")
        print("1. Student")
        print("2. Senior")

        status = -1
        while status != 0 and status != 1 and status != 2:
            selection2 = int(input("Select status (0 if none of the above): "))

            if selection2 == 1:
                finalprice = applydiscount(baseprice)
            if selection2 == 2:
                finalprice = applydiscount(baseprice)
            if selection2 == 0:
                finalprice = baseprice
            status = selection2

            # DISPLAYS TICKET DETAILS
            print(f"\n===== Ticket Details =====")
            print(f"\nFrom: {stations[fromDes - 1]}")
            print(f"To: {stations[toDes - 1]}")
            print("-----------------------------")
            print(f"Ticket price: ₱{finalprice}")

    # STORED VALUE FARE MATRIX
    if selection1 == 2:
        fromDes = 0
        toDes = 0

        # STATION SELECTION
        print(f"\n===== SELECT STATION =====")
        while fromDes < 1 or fromDes > 25:
            fromDes = int(input("From (Station 1-25): "))
        while toDes < 1 or toDes > 25:
            toDes = int(input("To (Station 1-25): "))

        baseprice = stored_value[fromDes - 1][toDes - 1]

        # DISCOUNT SELECTION
        print(f"\n===== SELECT STATUS =====")
        print("1. Student")
        print("2. Senior")

        status = -1
        while status != 0 and status != 1 and status != 2:
            selection2 = int(input("Select status (0 if none of the above): "))

            if selection2 == 1:
                finalprice = applydiscount(baseprice)
            if selection2 == 2:
                finalprice = applydiscount(baseprice)
            if selection2 == 0:
                finalprice = baseprice
            status = selection2

            # DISPLAYS TICKET DETAILS
            print(f"\n===== Ticket Details =====")
            print(f"From: {stations[fromDes - 1]}")
            print(f"To: {stations[toDes - 1]}")
            print("-----------------------------")
            print(f"Ticket price: ₱{finalprice}")
    ticket = selection1
